---
name: Pre-Commit (Docker - Fast) - DISABLED

'on':
  # Disabled due to Docker package permissions issues
  # Need to properly configure package visibility and permissions
  workflow_dispatch: {}

permissions:
  contents: read
  security-events: write  # allow SARIF upload if secret scan produces one

jobs:
  pre-commit:
    name: Run pre-commit hooks (Docker)
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/giantcroissant-lunar/pinto-bean/precommit:latest
      # No credentials needed for public images
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          # Need full history for pre-commit to work properly
          fetch-depth: 0

      - name: Cache pre-commit environments
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pre-commit
          key: precommit-docker-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            precommit-docker-${{ runner.os }}-

      - name: Configure git (required for pre-commit)
        run: |
          git config --global --add safe.directory /github/workspace
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Run pre-commit (changed files fast path)
        run: pre-commit run --show-diff-on-failure --color=always

      - name: Run pre-commit (all files on main / PR head)
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        run: pre-commit run --all-files --show-diff-on-failure --color=always

      - name: Custom secret validator (SARIF)
        id: secret_validator
        run: |
          set -e
          export VALIDATOR_SARIF=secret-scan-precommit.sarif
          if python scripts/python/validate_secrets.py; then
            echo "validator_exit=0" >> $GITHUB_OUTPUT
          else
            rc=$?
            echo "validator_exit=$rc" >> $GITHUB_OUTPUT
          fi
          if [ -f "$VALIDATOR_SARIF" ]; then
            echo "sarif_present=true" >> $GITHUB_OUTPUT
            ls -l "$VALIDATOR_SARIF"
          else
            echo "sarif_present=false" >> $GITHUB_OUTPUT
          fi
          # Propagate failure after outputs captured
          if [ "$(grep validator_exit= $GITHUB_OUTPUT | cut -d= -f2)" != "0" ]; then exit 1; fi

      - name: Upload secret validator SARIF
        if: always() && steps.secret_validator.outputs.sarif_present == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: secret-scan-precommit.sarif
