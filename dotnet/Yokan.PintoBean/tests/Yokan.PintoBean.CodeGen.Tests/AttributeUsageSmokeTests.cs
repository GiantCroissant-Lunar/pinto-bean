using System;

namespace Yokan.PintoBean.CodeGen.Tests;

/// <summary>
/// Smoke tests to verify attributes can be applied correctly.
/// </summary>
public class AttributeUsageSmokeTests
{
    /// <summary>
    /// Tests that RealizeServiceAttribute can be applied to a class.
    /// </summary>
    [Fact]
    public void RealizeServiceAttribute_CanBeAppliedToClass()
    {
        // Arrange
        var serviceType = typeof(TestServiceWithRealizeAttribute);
        
        // Act
        var attributes = serviceType.GetCustomAttributes(typeof(RealizeServiceAttribute), false);
        
        // Assert
        Assert.Single(attributes);
        var attribute = (RealizeServiceAttribute)attributes[0];
        Assert.Single(attribute.Contracts);
        Assert.Equal(typeof(ISmokeTestService), attribute.Contracts[0]);
    }

    /// <summary>
    /// Tests that GenerateRegistryAttribute can be applied to an interface.
    /// </summary>
    [Fact]
    public void GenerateRegistryAttribute_CanBeAppliedToInterface()
    {
        // Arrange
        var interfaceType = typeof(ISmokeTestServiceWithGenerateRegistry);
        
        // Act
        var attributes = interfaceType.GetCustomAttributes(typeof(GenerateRegistryAttribute), false);
        
        // Assert
        Assert.Single(attributes);
        var attribute = (GenerateRegistryAttribute)attributes[0];
        Assert.Equal(typeof(ISmokeTestServiceWithGenerateRegistry), attribute.Contract);
    }
}

/// <summary>
/// Test service interface for smoke testing.
/// </summary>
public interface ISmokeTestService
{
    /// <summary>
    /// Test method for smoke testing.
    /// </summary>
    void Execute();
}

/// <summary>
/// Test service interface with GenerateRegistryAttribute applied.
/// </summary>
[GenerateRegistry(typeof(ISmokeTestServiceWithGenerateRegistry))]
public interface ISmokeTestServiceWithGenerateRegistry
{
    /// <summary>
    /// Test method for smoke testing.
    /// </summary>
    void Process();
}

/// <summary>
/// Test service implementation with RealizeServiceAttribute applied.
/// </summary>
[RealizeService(typeof(ISmokeTestService))]
public partial class TestServiceWithRealizeAttribute
{
    // Implementation would be generated by the source generator
}